# Terraform files
*.tfstate
*.tfstate.*
*.tfvars
*.tfvars.json
!example.tfvars
!*.auto.tfvars
!*.auto.tfvars.json

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data such as
# password, private keys, and other secrets. These should not be part of version
# control as they are data points which are potentially sensitive and subject
# to change depending on the environment.
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*
*.tfplan
*.tfplan.*

# Ignore CLI configuration files
.terraformrc
terraform.rc

# Terraform directories
.terraform/
.terraform.lock.hcl

# Terraform workspaces
.terraform.tfstate.d/

# Terraform provider plugins
.terraform/providers/

# Terraform modules
.terraform/modules/

# Terraform backend configuration
backend.tf

# Terraform lock files (optional - some teams prefer to commit these)
# .terraform.lock.hcl

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# IDE files
.vscode/
.idea/
*.swp
*.swo
*~

# Logs
*.log

# Temporary files
*.tmp
*.temp

# AWS specific (since you have AWS CLI installer)
.aws/
aws-credentials
ansible/client.pem
**/*.pem
